const { EmbedBuilder } = require('discord.js');
const config = require('../../config/config');

module.exports = {
    name: 'owners',
    description: 'Xem danh s√°ch ch·ªß s·ªü h·ªØu bot',
    
    async execute(message, args) {
        // Ch·ªâ owner m·ªõi xem ƒë∆∞·ª£c danh s√°ch owner
        if (!config.isOwner(message.author.id)) {
            return message.reply('üîí Ch·ªâ owner bot m·ªõi c√≥ th·ªÉ xem danh s√°ch n√†y!');
        }

        try {
            const ownerIds = config.ownerIds;
            
            if (ownerIds.length === 0) {
                const noOwnerEmbed = new EmbedBuilder()
                    .setTitle('‚ö†Ô∏è CH∆ØA C·∫§U H√åNH OWNER')
                    .setDescription('**Ch∆∞a c√≥ owner n√†o ƒë∆∞·ª£c c·∫•u h√¨nh!**\n\n' +
                        'üîß **ƒê·ªÉ c·∫•u h√¨nh:**\n' +
                        '‚Ä¢ Th√™m `DISCORD_OWNER_IDS=your_id_here` v√†o file .env\n' +
                        '‚Ä¢ Ho·∫∑c `OWNER_ID=your_id_here` cho 1 owner\n' +
                        '‚Ä¢ Restart bot sau khi c·∫•u h√¨nh')
                    .setColor('#FF6600')
                    .setTimestamp();
                
                return message.reply({ embeds: [noOwnerEmbed] });
            }

            // L·∫•y th√¥ng tin c·ªßa c√°c owner
            let ownerList = '';
            let validOwners = 0;
            
            for (let i = 0; i < ownerIds.length; i++) {
                const ownerId = ownerIds[i];
                try {
                    const user = await message.client.users.fetch(ownerId);
                    ownerList += `**${i + 1}.** ${user.displayName} (\`${user.tag}\`)\n`;
                    ownerList += `    ‚îî ID: \`${ownerId}\`\n`;
                    ownerList += `    ‚îî Status: ${user.presence?.status === 'online' ? 'üü¢ Online' : '‚ö™ Offline'}\n\n`;
                    validOwners++;
                } catch (error) {
                    ownerList += `**${i + 1}.** ‚ùå Unknown User\n`;
                    ownerList += `    ‚îî ID: \`${ownerId}\`\n`;
                    ownerList += `    ‚îî Status: ‚ö†Ô∏è Invalid ID\n\n`;
                }
            }

            const embed = new EmbedBuilder()
                .setTitle('üëë DANH S√ÅCH CH·ª¶ S·ªû H·ªÆU BOT')
                .setDescription(`**Bot hi·ªán c√≥ ${ownerIds.length} owner ƒë∆∞·ª£c c·∫•u h√¨nh:**\n\n${ownerList}`)
                .addFields(
                    {
                        name: 'üìä Th·ªëng k√™',
                        value: `‚Ä¢ T·ªïng: ${ownerIds.length} owner\n‚Ä¢ H·ª£p l·ªá: ${validOwners} owner\n‚Ä¢ Kh√¥ng h·ª£p l·ªá: ${ownerIds.length - validOwners} owner`,
                        inline: true
                    },
                    {
                        name: 'üîë Quy·ªÅn ƒë·∫∑c bi·ªát',
                        value: '‚Ä¢ L·ªánh `,update` (c·∫≠p nh·∫≠t bot)\n‚Ä¢ L·ªánh `,owners` (xem danh s√°ch)\n‚Ä¢ Quy·ªÅn t·ªëi cao v·ªõi bot',
                        inline: true
                    }
                )
                .setColor('#FFD700')
                .setFooter({ text: `Y√™u c·∫ßu b·ªüi: ${message.author.tag}` })
                .setTimestamp();

            await message.reply({ embeds: [embed] });

        } catch (error) {
            console.error('L·ªói owners command:', error);
            await message.reply('‚ùå C√≥ l·ªói x·∫£y ra khi l·∫•y danh s√°ch owner!');
        }
    }
}; 