const { EmbedBuilder } = require('discord.js');
const User = require('../../models/User');
const config = require('../../config/config');

module.exports = {
    name: 'toprin',
    description: 'Hi·ªÉn th·ªã top users c√≥ nhi·ªÅu Rin nh·∫•t k√®m User ID',
    usage: 'toprin [s·ªë l∆∞·ª£ng]',
    category: 'admin',
    async execute(message, args) {
        // Ki·ªÉm tra quy·ªÅn owner
        if (!config.isOwner(message.author.id)) {
            return message.reply('‚õî L·ªánh n√†y ch·ªâ d√†nh cho owner bot!');
        }

        try {
            // S·ªë l∆∞·ª£ng top users c·∫ßn hi·ªÉn th·ªã (m·∫∑c ƒë·ªãnh 10)
            const limit = parseInt(args[0]) || 10;

            if (limit < 1 || limit > 50) {
                return message.reply('‚ùå S·ªë l∆∞·ª£ng ph·∫£i t·ª´ 1 ƒë·∫øn 50!');
            }

            // L·∫•y top users t·ª´ database
            const topUsers = await User.find({})
                .sort({ rin: -1 })
                .limit(limit)
                .select('userId rin displayName username');

            if (topUsers.length === 0) {
                return message.reply('‚ùå Kh√¥ng t√¨m th·∫•y user n√†o trong database!');
            }

            // T·∫°o embed hi·ªÉn th·ªã
            const embed = new EmbedBuilder()
                .setTitle(`üèÜ TOP ${limit} USERS C√ì NHI·ªÄU RIN NH·∫§T`)
                .setColor('#FFD700')
                .setTimestamp()
                .setFooter({ 
                    text: `Y√™u c·∫ßu b·ªüi ${message.author.tag}`, 
                    iconURL: message.author.displayAvatarURL() 
                });

            let description = '';
            const userInfos = [];

            for (let i = 0; i < topUsers.length; i++) {
                const user = topUsers[i];
                const rank = i + 1;
                
                // Th·ª≠ l·∫•y th√¥ng tin user t·ª´ Discord
                let displayName = user.displayName || user.username || 'Unknown';
                try {
                    const discordUser = await message.client.users.fetch(user.userId);
                    displayName = discordUser.tag || discordUser.username;
                } catch (error) {
                    // N·∫øu kh√¥ng l·∫•y ƒë∆∞·ª£c th√¥ng tin Discord, d√πng th√¥ng tin t·ª´ DB
                }

                const rankEmoji = rank === 1 ? 'ü•á' : rank === 2 ? 'ü•à' : rank === 3 ? 'ü•â' : 'üèÖ';
                
                description += `${rankEmoji} **#${rank}** - ${displayName}\n`;
                description += `üí∞ **${user.rin.toLocaleString()}** Rin\n`;
                description += `üÜî \`${user.userId}\`\n\n`;

                // L∆∞u th√¥ng tin ƒë·ªÉ export
                userInfos.push({
                    rank: rank,
                    userId: user.userId,
                    displayName: displayName,
                    rin: user.rin
                });
            }

            embed.setDescription(description);

            // T·∫°o n√∫t ƒë·ªÉ copy IDs
            const topUserIds = topUsers.map(u => u.userId).join('\n');
            
            const reply = await message.reply({ embeds: [embed] });

            // G·ª≠i IDs trong code block ri√™ng bi·ªát
            const idsEmbed = new EmbedBuilder()
                .setTitle('üìã DANH S√ÅCH USER IDS')
                .setDescription(`\`\`\`\n${topUserIds}\n\`\`\``)
                .setColor('#00FF00')
                .setFooter({ text: 'Copy danh s√°ch IDs n√†y ƒë·ªÉ s·ª≠ d·ª•ng cho l·ªánh announce' });

            await message.channel.send({ embeds: [idsEmbed] });

            // G·ª≠i th·ªëng k√™ t·ªïng quan
            const totalUsers = await User.countDocuments();
            const totalRin = await User.aggregate([
                { $group: { _id: null, total: { $sum: '$rin' } } }
            ]);

            const statsEmbed = new EmbedBuilder()
                .setTitle('üìä TH·ªêNG K√ä T·ªîNG QUAN')
                .addFields(
                    { name: 'üë• T·ªïng Users', value: totalUsers.toLocaleString(), inline: true },
                    { name: 'üí∞ T·ªïng Rin trong h·ªá th·ªëng', value: (totalRin[0]?.total || 0).toLocaleString(), inline: true },
                    { name: 'üéØ Top Users chi·∫øm', value: `${((topUsers.reduce((sum, u) => sum + u.rin, 0) / (totalRin[0]?.total || 1)) * 100).toFixed(2)}%`, inline: true }
                )
                .setColor('#FF6B6B');

            await message.channel.send({ embeds: [statsEmbed] });

        } catch (error) {
            console.error('L·ªói toprin:', error);
            message.reply('‚ùå C√≥ l·ªói x·∫£y ra khi l·∫•y d·ªØ li·ªáu top rin!');
        }
    }
}; 