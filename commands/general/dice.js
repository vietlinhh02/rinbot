const { EmbedBuilder } = require('discord.js');

module.exports = {
    name: 'dice',
    description: 'Tung x√∫c x·∫Øc ng·∫´u nhi√™n',
    
    async execute(message, args) {
        try {
            // M·∫∑c ƒë·ªãnh tung 1 x√∫c x·∫Øc 6 m·∫∑t
            let numDice = 1;
            let numSides = 6;
            
            // Parse args n·∫øu c√≥
            if (args.length > 0) {
                const input = args[0];
                
                // Format: 2d6 (2 x√∫c x·∫Øc 6 m·∫∑t)
                if (input.includes('d')) {
                    const parts = input.split('d');
                    numDice = parseInt(parts[0]) || 1;
                    numSides = parseInt(parts[1]) || 6;
                } else {
                    // Ch·ªâ s·ªë m·∫∑t: dice 20
                    numSides = parseInt(input) || 6;
                }
            }
            
            // Gi·ªõi h·∫°n ƒë·ªÉ tr√°nh spam
            numDice = Math.min(Math.max(1, numDice), 10);
            numSides = Math.min(Math.max(2, numSides), 100);
            
            // Tung x√∫c x·∫Øc
            const results = [];
            let total = 0;
            
            for (let i = 0; i < numDice; i++) {
                const roll = Math.floor(Math.random() * numSides) + 1;
                results.push(roll);
                total += roll;
            }
            
            // T·∫°o emoji x√∫c x·∫Øc cho c√°c s·ªë ƒë·∫∑c bi·ªát
            const getDiceEmoji = (num) => {
                const diceEmojis = ['‚öÄ', '‚öÅ', '‚öÇ', '‚öÉ', '‚öÑ', '‚öÖ'];
                return num <= 6 ? diceEmojis[num - 1] : `**${num}**`;
            };
            
            const embed = new EmbedBuilder()
                .setTitle('üé≤ TUNG X√öC X·∫ÆC')
                .setColor('#FFD700')
                .addFields(
                    {
                        name: 'üìä Th√¥ng tin',
                        value: `**S·ªë x√∫c x·∫Øc:** ${numDice}\n**S·ªë m·∫∑t:** ${numSides}`,
                        inline: true
                    },
                    {
                        name: 'üéØ K·∫øt qu·∫£',
                        value: results.map(r => getDiceEmoji(r)).join(' '),
                        inline: true
                    },
                    {
                        name: 'üî¢ T·ªïng ƒëi·ªÉm',
                        value: `**${total}**`,
                        inline: true
                    }
                )
                .setFooter({ 
                    text: `${message.author.displayName} ƒë√£ tung x√∫c x·∫Øc | D√πng: ,dice 2d20` 
                })
                .setTimestamp();
                
            // Th√™m m√¥ t·∫£ chi ti·∫øt n·∫øu tung nhi·ªÅu x√∫c x·∫Øc
            if (numDice > 1) {
                embed.setDescription(`**Chi ti·∫øt:** ${results.map((r, i) => `X√∫c x·∫Øc ${i + 1}: ${r}`).join(' | ')}`);
            }
            
            await message.reply({ embeds: [embed] });
            
        } catch (error) {
            console.error('L·ªói dice:', error);
            await message.reply('‚ùå C√≥ l·ªói x·∫£y ra khi tung x√∫c x·∫Øc!');
        }
    }
}; 