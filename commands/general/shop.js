const { EmbedBuilder } = require('discord.js');
const User = require('../../models/User');
const { getPrefix } = require('../../utils/prefixHelper');

// ƒê·ªãnh nghƒ©a shop items
const SHOP_ITEMS = {
    thuoc: {
        name: 'Thu·ªëc',
        emoji: 'üíä',
        price: 100,
        description: 'Ch·ªØa b·ªánh cho th√∫ c∆∞ng khi ·ªëm',
        details: '‚Ä¢ H·ªìi ph·ª•c s·ª©c kh·ªèe th√∫ c∆∞ng t·ª´ "·ªêm" v·ªÅ "B√¨nh th∆∞·ªùng"\n‚Ä¢ C·∫ßn thi·∫øt khi th√∫ c∆∞ng b·ªánh ƒë·ªÉ c√≥ th·ªÉ gh√©p c·∫∑p\n‚Ä¢ S·ª≠ d·ª•ng: `use thuoc @user`',
        category: 'pet'
    },
    balo: {
        name: 'Balo',
        emoji: 'üéí', 
        price: 500,
        description: 'TƒÉng s·ª©c ch·ª©a t√∫i ƒë·ªì',
        details: '‚Ä¢ TƒÉng s·ª©c ch·ª©a inventory +5 slots m·ªói c√°i\n‚Ä¢ S·ª©c ch·ª©a m·∫∑c ƒë·ªãnh: 10 slots\n‚Ä¢ C√≥ th·ªÉ mua nhi·ªÅu balo ƒë·ªÉ tƒÉng th√™m\n‚Ä¢ T·ª± ƒë·ªông c√≥ hi·ªáu l·ª±c khi mua',
        category: 'utility'
    },
    nhankim: {
        name: 'Nh·∫´n Kim',
        emoji: 'üíç',
        price: 1000,
        description: 'Nh·∫´n c∆∞·ªõi lo·∫°i c∆° b·∫£n',
        details: '‚Ä¢ D√πng ƒë·ªÉ k·∫øt h√¥n v·ªõi ng∆∞·ªùi y√™u\n‚Ä¢ Level t·ªëi ƒëa: 10\n‚Ä¢ TƒÉng exp ch·∫≠m nh·∫•t\n‚Ä¢ S·ª≠ d·ª•ng: `marry @user nhankim`',
        category: 'marriage'
    },
    nhanbac: {
        name: 'Nh·∫´n B·∫°c',
        emoji: 'üíé',
        price: 3000,
        description: 'Nh·∫´n c∆∞·ªõi cao c·∫•p',
        details: '‚Ä¢ D√πng ƒë·ªÉ k·∫øt h√¥n v·ªõi ng∆∞·ªùi y√™u\n‚Ä¢ Level t·ªëi ƒëa: 20\n‚Ä¢ TƒÉng exp trung b√¨nh\n‚Ä¢ S·ª≠ d·ª•ng: `marry @user nhanbac`',
        category: 'marriage'
    },
    nhanvang: {
        name: 'Nh·∫´n V√†ng',
        emoji: 'üëë',
        price: 10000,
        description: 'Nh·∫´n c∆∞·ªõi si√™u VIP',
        details: '‚Ä¢ D√πng ƒë·ªÉ k·∫øt h√¥n v·ªõi ng∆∞·ªùi y√™u\n‚Ä¢ Level t·ªëi ƒëa: 50\n‚Ä¢ TƒÉng exp nhanh nh·∫•t\n‚Ä¢ S·ª≠ d·ª•ng: `marry @user nhanvang`',
        category: 'marriage'
    }
};

module.exports = {
    name: 'shop',
    description: 'Xem c·ª≠a h√†ng mua ƒë·ªì',
    async execute(message, args, client) {
        try {
            const prefix = await getPrefix(message.guild?.id);
            const userId = message.author.id;
            
            // L·∫•y th√¥ng tin user ƒë·ªÉ hi·ªÉn th·ªã s·ªë Rin
            const user = await User.findOne({ userId });
            const userRin = user ? user.rin : 0;
            const inventory = user?.inventory || { thuoc: 0, balo: 0 };

            // T√≠nh t·ªïng gi√° tr·ªã inventory
            let inventoryValue = 0;
            Object.entries(inventory).forEach(([itemKey, count]) => {
                if (SHOP_ITEMS[itemKey]) {
                    inventoryValue += count * SHOP_ITEMS[itemKey].price;
                }
            });

            // T·∫°o danh s√°ch items theo category
            const petItems = Object.entries(SHOP_ITEMS)
                .filter(([key, item]) => item.category === 'pet')
                .map(([key, item]) => {
                    const owned = inventory[key] || 0;
                    const canAfford = userRin >= item.price ? '‚úÖ' : '‚ùå';
                    return `${item.emoji} **${item.name}** - ${item.price.toLocaleString()} Rin ${canAfford}\n` +
                           `   üìñ ${item.description}\n` +
                           `   üì¶ ƒêang c√≥: ${owned} c√°i\n` +
                           `   üí° Mua: \`${prefix}buy ${key}\``;
                }).join('\n\n');

            const utilityItems = Object.entries(SHOP_ITEMS)
                .filter(([key, item]) => item.category === 'utility')
                .map(([key, item]) => {
                    const owned = inventory[key] || 0;
                    const canAfford = userRin >= item.price ? '‚úÖ' : '‚ùå';
                    return `${item.emoji} **${item.name}** - ${item.price.toLocaleString()} Rin ${canAfford}\n` +
                           `   üìñ ${item.description}\n` +
                           `   üì¶ ƒêang c√≥: ${owned} c√°i\n` +
                           `   üí° Mua: \`${prefix}buy ${key}\``;
                }).join('\n\n');

            const marriageItems = Object.entries(SHOP_ITEMS)
                .filter(([key, item]) => item.category === 'marriage')
                .map(([key, item]) => {
                    const owned = inventory[key] || 0;
                    const canAfford = userRin >= item.price ? '‚úÖ' : '‚ùå';
                    return `${item.emoji} **${item.name}** - ${item.price.toLocaleString()} Rin ${canAfford}\n` +
                           `   üìñ ${item.description}\n` +
                           `   üì¶ ƒêang c√≥: ${owned} c√°i\n` +
                           `   üí° Mua: \`${prefix}buy ${key}\``;
                }).join('\n\n');

            const shopEmbed = new EmbedBuilder()
                .setTitle('üè™ C·ª¨A H√ÄNG RINBOT')
                .setDescription('**Ch√†o m·ª´ng ƒë·∫øn v·ªõi c·ª≠a h√†ng!** üõí\n\n' +
                    `**üí∞ S·ªë Rin c·ªßa b·∫°n:** ${userRin.toLocaleString()} Rin\n` +
                    `**üíé Gi√° tr·ªã inventory:** ${inventoryValue.toLocaleString()} Rin\n\n` +
                    '**üìã C√°ch mua h√†ng:**\n' +
                    `‚Ä¢ \`${prefix}buy [t√™n item]\` - Mua ƒë·ªì\n` +
                    `‚Ä¢ \`${prefix}inventory\` - Xem t√∫i ƒë·ªì\n` +
                    `‚Ä¢ \`${prefix}use [item] [@user]\` - S·ª≠ d·ª•ng ƒë·ªì`)
                .setColor('#E74C3C')
                .setThumbnail(client.user.displayAvatarURL());

            // Th√™m pet items
            if (petItems) {
                shopEmbed.addFields({
                    name: 'üêæ ƒê·ªì d√πng th√∫ c∆∞ng',
                    value: petItems,
                    inline: false
                });
            }

            // Th√™m utility items  
            if (utilityItems) {
                shopEmbed.addFields({
                    name: '‚öôÔ∏è ƒê·ªì d√πng ti·ªán √≠ch',
                    value: utilityItems,
                    inline: false
                });
            }

            // Th√™m marriage items
            if (marriageItems) {
                shopEmbed.addFields({
                    name: 'üíí Nh·∫´n c∆∞·ªõi',
                    value: marriageItems,
                    inline: false
                });
            }

            // Th√™m h∆∞·ªõng d·∫´n chi ti·∫øt
            shopEmbed.addFields({
                name: 'üìö Chi ti·∫øt s·∫£n ph·∫©m',
                value: Object.entries(SHOP_ITEMS).map(([key, item]) => 
                    `**${item.emoji} ${item.name}:**\n${item.details}`
                ).join('\n\n'),
                inline: false
            });

            // Th√™m th√¥ng tin ki·∫øm Rin
            shopEmbed.addFields({
                name: 'üí° C√°ch ki·∫øm Rin',
                value: `‚Ä¢ \`${prefix}rindaily\` - Nh·∫≠n 200 Rin m·ªói ng√†y\n` +
                       `‚Ä¢ \`${prefix}work\` - L√†m vi·ªác ki·∫øm 50-150 Rin\n` +
                       `‚Ä¢ \`${prefix}baucua\` - Ch∆°i b·∫ßu cua may m·∫Øn\n` +
                       `‚Ä¢ \`${prefix}muacay\` - ƒê·∫ßu t∆∞ farm sinh l·ªùi\n` +
                       `‚Ä¢ \`${prefix}top\` - Xem b·∫£ng x·∫øp h·∫°ng`,
                inline: false
            });

            shopEmbed.setFooter({ 
                text: 'C·ª≠a h√†ng 24/7 ‚Ä¢ H√†ng ch·∫•t l∆∞·ª£ng cao ‚Ä¢ Gi√° c·∫£ ph·∫£i chƒÉng!',
                iconURL: message.client.user.displayAvatarURL()
            });

            await message.reply({ embeds: [shopEmbed] });

        } catch (error) {
            console.error('L·ªói shop command:', error);
            await message.reply('‚ùå C√≥ l·ªói x·∫£y ra khi m·ªü c·ª≠a h√†ng!');
        }
    }
}; 